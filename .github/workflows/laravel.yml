name: Automated tests and deploy

on:
  pull_request:
  push:
    branches:
      - main
      - dev

jobs:
  tests:
    name: Test application
    runs-on: ubuntu-latest

    if: "! startsWith(github.event.head_commit.message, 'wip:')"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.1
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Check code style
        run: ./vendor/bin/pint --test

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer files
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: dependencies-composer-${{ runner.os }}-${{ hashFiles('composer.lock') }}
          restore-keys: dependencies-composer-${{ runner.os }}-

      - name: Cache node files
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: dependencies-node-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: dependencies-node-${{ runner.os }}-

      - name: Install Composer dependencies
        run: composer install -q --no-interaction --prefer-dist

      - name: Execute code static analysis
        run: ./vendor/bin/phpstan analyse -c phpstan.neon --no-ansi --no-progress

      - name: Install NPM dependencies
        run: npm ci

      - name: Compile assets
        run: npm run build

      - name: Execute tests
        run: ./vendor/bin/phpunit

      - name: Deploy production
        if: github.ref == 'refs/heads/main'
        run: echo ok
#        run: |
#          curl --request POST \
#          --url ${{ secrets.DEPLOY_WEBHOOK_PROD }} \
#          --header 'content-type: application/json'

      - name: Deploy dev
        if: github.ref == 'refs/heads/dev'
        run: echo ok
#        uses: Glennmen/ploi-deploy-action@v1.2.0
#        with:
#          webhook_url: ${{ secrets.DEPLOY_WEBHOOK_DEV }}
